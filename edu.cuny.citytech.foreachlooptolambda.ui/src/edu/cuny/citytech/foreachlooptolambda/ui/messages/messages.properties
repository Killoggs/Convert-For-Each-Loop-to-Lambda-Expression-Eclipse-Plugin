ForEachLoopToLambdaRefactoring_MethodsNotSpecified=No methods to refactor.
ForEachLoopToLambdaRefactoring_Name=Convert Enhanced For Loop to Lambda
ForEachLoopToLambdaRefactoring_CheckingPreconditions=Checking preconditions...
ForEachLoopToLambdaRefactoring_CompilingSource=Compiling source ...
ForEachLoopToLambdaRefactoring_CreatingChange=Creating change...
ForEachLoopToLambdaRefactoring_CUContainsCompileErrors=Compilation unit ''{0}'' contains compile errors.
ForEachLoopToLambdaRefactoring_MethodDoesNotExist=Method ''{0}'' does not exist.
ForEachLoopToLambdaRefactoring_PreconditionFailed=No methods have passed precondition checking.
ForEachLoopToLambdaRefactoring_RefactoringNotPossible=Method ''{0}'' has been deemed not to be a skeletal implementation and therefore in its current state cannot be refactored by this plugin.
ForEachLoopToLambdaRefactoring_WrongType=Internal error: node ''{0}'' must be of a simple name type, instead its type was ''{1}''
ForEachLoopToLambdaRefactoring_CantChangeMethod=Need access to source code of method ''{0}''.
ForEachLoopToLambdaRefactoring_NoMethodsWithStatements=Method ''{0}'' has statements.
ForEachLoopToLambdaRefactoring_ContainBreak=Enhanced for statement contains break ''{0}''.
ForEachLoopToLambdaRefactoring_ContainContinue=Enhanced for statement contains continue ''{0}''.
ForEachLoopToLambdaRefactoring_ContainInvalidReturn=Enhanced for statement contains invalid return ''{0}''.
ForEachLoopToLambdaRefactoring_ContainMultipleReturn=Enhanced for statement contains invalid return ''{0}''.
ForEachLoopToLambdaRefactoring_ContainException=Enhanced for statement contains exception ''{0}''.
ForEachLoopToLambdaRefactoring_IteratesOverCollection=Enhanced for statement doesn't iterate over Collections ''{0}''.